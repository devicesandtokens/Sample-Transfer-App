apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'


android {

    buildFeatures {
        dataBinding true
    }
    compileSdkVersion targetSdk
    defaultConfig {
        applicationId "com.interswitchng.interswitchpos_sample"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        multiDexEnabled true
        versionCode 4
        versionName "1.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
        android.applicationVariants.all{
            variant ->
                variant.outputs.all{
                    def date = new Date()
                    def formattedDate = date.format('yyMMdd')
                    String appName = "Smart POS"
                    outputFileName = "${appName}-${variant.versionName}-${formattedDate}.apk"
                }
        }
    }

    signingConfigs {
        paxConfig {
            keyAlias 'PAX'
            keyPassword 'B6H2A7Y8WG'
            storeFile file(rootDir.absolutePath + '/PAXKeystore.jks')
            storePassword 'B6H2A7Y8WG'
        }
    }


    buildTypes {
        release {
            minifyEnabled minified
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.paxConfig
            applicationIdSuffix '.v2.release'
            buildConfigField("boolean", "MOCK", "false") // mock device
        }
        debug {
            buildConfigField("boolean", "MOCK", "false") // mock device
            applicationIdSuffix '.v2.debug'
        }
    }

    flavorDimensions "terminal"
    productFlavors{
        telpo {
            dimension "terminal"
            applicationIdSuffix ".telpo"
            versionNameSuffix "-telpo"
        }
        pax {
            dimension "terminal"
            applicationIdSuffix ".pax"
            versionNameSuffix "-pax"
        }
    }
    compileOptions {
        targetCompatibility javaVersion
        sourceCompatibility javaVersion
    }



    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    configurations {
        telpoReleaseImplementation
        telpoDebugImplementation

        paxReleaseImplementation
        paxDebugImplementation

        releaseImplementation
        debugImplementation
    }


    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}



dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation 'com.android.support:support-v4:28.0.0'
//    implementation project(path: ':smart-pos-emv-telpo')
    def nav__version = "2.3.5"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.2.0-alpha02'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation "androidx.multidex:multidex:$multidex_version"

    //releaseImplementation "com.interswitchng:smart-pos-core:$versionName"
    //paxDebugImplementation "com.interswitchng:smart-pos-emv-pax:$versionName"
    //releaseImplementation "com.interswitchng:smart-pos-usb:$versionName"


    // kotlin coroutine libs
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav__version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav__version"

    debugImplementation project(':smart-pos-core-release')
    debugImplementation project(':smart-pos-usb-release')
    paxDebugImplementation project(':smart-pos-emv-pax-release')
    telpoDebugImplementation project(':smart-pos-emv-telpo-release')
//
//
    releaseImplementation project(':smart-pos-core-release')
    releaseImplementation project(':smart-pos-usb-release')
    paxReleaseImplementation project(':smart-pos-emv-pax-release')
    telpoReleaseImplementation project(':smart-pos-emv-telpo-release')


    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "org.koin:koin-test:$koin_version"

    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    implementation 'com.pixplicity.easyprefs:library:1.9.0'
    implementation 'com.tapadoo.android:alerter:3.0.0'
    implementation 'com.airbnb.android:lottie:3.6.1'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'




    // core dependencies
    koin_version = '1.0.1'
    retrofit_version = '2.5.0'
    zxing_version = '3.3.0'
    coroutine_version = '1.3.1'
    arch_lifecycle_version = '1.1.1'
    arch_paging_version = '1.0.1'
    koptional_version = '1.6.0'
    send_grid_version = '4.4.1'
    multidex_version = '2.0.1'

    // test dependencies
    mockito_version = '2.0.0'
    okhttp_version = '3.12.1'
    robolectric_version = '4.0.2'
    androidx_version = '1.0.0'
    test_runner_version = '1.0.2'
    concurrent_version = '0.4.4'

    // kotlin optional lib
    implementation "com.gojuno.koptional:koptional:$koptional_version"

    // retrofit http library
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
    // retrofit gson converter
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
//    // xml converter
//    implementation ('com.thoughtworks.xstream:xstream:1.4.11') {
//        exclude group: 'xmlpull', module: 'xmlpull'
//        exclude group: 'org.xmlpull.v1.XmlPullParserException'
//    }
    // picasso image library
    implementation('com.squareup.picasso:picasso:2.71828') {
        exclude group: "com.android.support"
    }


    // architecture lifecycle components
    implementation 'androidx.lifecycle:lifecycle-runtime:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'

    // architecture paging
    implementation 'androidx.paging:paging-runtime:2.1.0'

    // realm monarch pagging library
    implementation 'com.github.Zhuinden:realm-monarchy:0.5.1'

    implementation("com.journeyapps:zxing-android-embedded:$zxing_version") {
        exclude group: "com.android.support"
    }

    // retrofit xml converter
    implementation('com.squareup.retrofit2:converter-simplexml:2.0.0-beta3') {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
    }

    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    testImplementation "net.jodah:concurrentunit:$concurrent_version"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestUtil 'androidx.test:orchestrator:1.2.0'

    kaptAndroidTest "androidx.databinding:databinding-compiler:3.5.0"
    implementation 'com.github.javadev:underscore:1.64'
}
repositories {
    mavenCentral()
}
